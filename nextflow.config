
nextflow.enable.dsl=2

manifest {
    name                                  = 'nf-gwas'
    version                               = '1.0.9'
    description                           = 'A Nextflow GWAS pipeline.'
    author                                = 'Lukas Forer and Sebastian SchÃ¶nherr'
    homePage                              = 'https://github.com/genepi/nf-gwas'
    mainScript                            = 'main.nf'
    nextflowVersion                       = '!>=22.10.4'
}

// Global default params, used in configs
params {
    project                       = 'test-gwas'
    genotypes_prediction          = "$baseDir/tests/input/pipeline/example.{bim,bed,fam}"
    genotypes_association         = "$baseDir/vcfs/*chr*.vcf.gz"
    genotypes_build               = 'hg19'
    genotypes_association_format  = 'vcf'
    phenotypes_filename           = "$baseDir/mean_n_se"
    // phenotypes_columns            = 'Y1,Y2'
    covariates_filename                   = null
    phenotypes_columns            = 'mean_n_se'
    covariates_columns                    = null
    covariates_cat_columns                = null
    phenotypes_binary_trait       = false
    regenie_test                  = 'additive'
    rsids_filename                = "$baseDir/tests/input/pipeline/rsids.tsv.gz"
    nparts_gcta                   = 15
}
plugins {
    id 'nf-schema@2.4.1' // Validation of pipeline parameters and creation of an input channel from a sample sheet
}

validation {
    help {
        enabled = true
    }
}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

process.container = 'quay.io/genepi/nf-gwas:v1.0.9'

profiles {
    debug { process.beforeScript          = 'echo $HOSTNAME' }

    test  {
         includeConfig 'conf/test.config'
    }

    docker {
        docker.enabled                    = true
        singularity.enabled               = false
    }
    
    slurm_singularity {
        process {
            executor = 'slurm'
            queue = 'cpu'
            container = 'nf-gwas.sif'

            withLabel:process_low {
                cpus = 2
                memory = 6.GB
                time = 4.h
            }

            withLabel:process_medium {
                cpus = 6
                memory = 36.GB
                time = 8.h
            }

            withLabel:process_high {
                cpus = 12
                memory = 72.GB
                time = 16.h
            }
        }

        singularity.enabled = true
        singularity.autoMounts = true
        singularity.cacheDir = "$projectDir/singularity_cache"

        executor {
            queueSize = 50
            submitRateLimit = '10 sec'
            pollInterval = '30 sec'
        }
    }

    singularity {
        singularity.enabled               = true
        singularity.autoMounts            = true
        docker.enabled                    = false
    }

    development {
        process.container                 = 'nf-gwas.sif'
        resume                            = true
        singularity.enabled               = true
    }

    slurm {
        process.executor                  = 'slurm'
        singularity.enabled               = true
        singularity.autoMounts            = true
        docker.enabled                    = false
    }

    slurm_with_scratch {
        process.executor                  = 'slurm'
        process.scratch                   = true
        singularity.enabled               = true
        singularity.autoMounts            = true
        docker.enabled                    = false

    }
}


// Define pubDir parameter with a default value
params.pubDir = params.outdir == "default" || params.outdir == null ? "output/${params.project}" : params.outdir

